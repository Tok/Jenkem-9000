<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>jenkem</groupId>
  <artifactId>Jenkem</artifactId>
  <packaging>war</packaging>
  <version>1.0</version>
  <name>Jenkem</name>

  <properties>
    <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>
    <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>
    <openshiftNamespace>9000</openshiftNamespace>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- API Versions: -->
    <!-- http://mvnrepository.com/ -->
    <scalaVersion>2.10.2</scalaVersion>
    <javaVersion>1.7</javaVersion>
    <vaadinVersion>7.1.0.beta1</vaadinVersion>
    <pircbotVersion>1.5.0</pircbotVersion>
    <datanucleusVersion>3.1.3</datanucleusVersion>
    <datanucleusEnhancerVersion>3.1.1</datanucleusEnhancerVersion>
    <validationApiVersion>1.0.0.GA</validationApiVersion>
    <!-- Building Plugin Versions: -->
    <!-- http://maven.apache.org/plugins/index.html -->
    <scalastyleMavenPluginVersion>0.3.2</scalastyleMavenPluginVersion>
    <MavenExecPluginVersion>1.2.1</MavenExecPluginVersion>
    <mavenDependencyPluginVersion>2.8</mavenDependencyPluginVersion>
    <mavenScalaPluginVersion>2.15.2</mavenScalaPluginVersion>
    <mavenDatanucleusPluginVersion>${datanucleusVersion}</mavenDatanucleusPluginVersion>
    <mavenWarPluginVersion>2.3</mavenWarPluginVersion>
    <mavenAntRunPluginVersion>1.7</mavenAntRunPluginVersion>
    <mavenResourcesPluginVersion>2.6</mavenResourcesPluginVersion>
    <mavenTruezipPluginVersion>1.1</mavenTruezipPluginVersion>
    <jbossAsMavenPluginVersion>7.4.Final</jbossAsMavenPluginVersion>
    <tomcat7MavenPluginVersion>2.1</tomcat7MavenPluginVersion>
    <!-- Reporting Plugin Versions: -->
    <mavenSurefirePluginVersion>2.15</mavenSurefirePluginVersion>
    <mavenCoberturaPluginVersion>2.5.2</mavenCoberturaPluginVersion>
    <mavenProjectInfoReportsPluginVersion>2.7</mavenProjectInfoReportsPluginVersion>
    <mavenSitePluginVersion>3.3</mavenSitePluginVersion>
  </properties>

  <repositories>
    <repository>
      <id>eap</id>
      <url>http://maven.repository.redhat.com/techpreview/all</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>oss.sonatype.org</id>
      <url>https://oss.sonatype.org/content/groups/scala-tools/</url>
    </repository>
    <repository>
      <id>DN_M2_Repo</id>
      <url>http://www.datanucleus.org/downloads/maven2/</url>
    </repository>
    <repository>
      <id>vaadin-addons</id>
      <url>http://maven.vaadin.com/vaadin-addons</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>eap</id>
      <url>http://maven.repository.redhat.com/techpreview/all</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>scala-style</id>
      <url>https://oss.sonatype.org/content/repositories/releases/org/scalastyle/scalastyle-maven-plugin</url>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client</artifactId>
      <version>${vaadinVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client-compiler</artifactId>
      <version>${vaadinVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-client-compiled</artifactId>
      <version>${vaadinVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-shared</artifactId>
      <version>${vaadinVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-server</artifactId>
      <version>${vaadinVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-theme-compiler</artifactId>
      <version>${vaadinVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.vaadin</groupId>
      <artifactId>vaadin-themes</artifactId>
      <version>${vaadinVersion}</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec</groupId>
      <artifactId>jboss-javaee-6.0</artifactId>
      <version>3.0.1.Final-redhat-1</version>
      <type>pom</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scalaVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.scala-tools</groupId>
      <artifactId>maven-scala-plugin</artifactId>
      <version>${mavenScalaPluginVersion}</version>
    </dependency>
    <dependency>
      <groupId>pircbot</groupId>
      <artifactId>pircbot</artifactId>
      <version>${pircbotVersion}</version>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${validationApiVersion}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${validationApiVersion}</version>
      <classifier>sources</classifier>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javax.portlet</groupId>
      <artifactId>portlet-api</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongo-java-driver</artifactId>
      <version>2.10.1</version>
    </dependency>
    <dependency>
      <groupId>javax.jdo</groupId>
      <artifactId>jdo-api</artifactId>
      <version>3.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.datanucleus</groupId>
      <artifactId>datanucleus-core</artifactId>
      <version>${datanucleusVersion}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.datanucleus</groupId>
      <artifactId>datanucleus-api-jdo</artifactId>
      <version>${datanucleusVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.datanucleus</groupId>
      <artifactId>datanucleus-mongodb</artifactId>
      <version>${datanucleusVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.datanucleus</groupId>
      <artifactId>datanucleus-enhancer</artifactId>
      <version>${datanucleusEnhancerVersion}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${mavenSurefirePluginVersion}</version>
        <configuration>
          <goal>surefire-report:report</goal>
          <reportFormat>html</reportFormat>
          <aggregate>true</aggregate>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>${mavenCoberturaPluginVersion}</version>
      </plugin>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>${mavenScalaPluginVersion}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${mavenProjectInfoReportsPluginVersion}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>index</report>
              <report>summary</report>
              <report>dependency-info</report>
              <report>dependencies</report>
              <report>plugins</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>${mavenSitePluginVersion}</version>
      </plugin>
    </plugins>
  </reporting>

  <build>
    <sourceDirectory>${sourceDirectory}</sourceDirectory>
    <testSourceDirectory>${testSourceDirectory}</testSourceDirectory>
    <resources>
      <resource>
        <directory>${sourceDirectory}</directory>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.scalastyle</groupId>
        <artifactId>scalastyle-maven-plugin</artifactId>
        <version>${scalastyleMavenPluginVersion}</version>
        <configuration>
          <verbose>false</verbose>
          <failOnViolation>true</failOnViolation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <failOnWarning>false</failOnWarning>
          <sourceDirectory>${sourceDirectory}</sourceDirectory>
          <testSourceDirectory>${testSourceDirectory}</testSourceDirectory>
          <configLocation>${basedir}/scalastyle_config.xml</configLocation>
          <outputFile>${basedir}/target/scalastyle-output.xml</outputFile>
          <outputEncoding>UTF-8</outputEncoding>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>${mavenScalaPluginVersion}</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <includes>
            <include>**/*.scala</include>
          </includes>
          <verbose>true</verbose>
          <scalaVersion>${scalaVersion}</scalaVersion>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.datanucleus</groupId>
        <artifactId>maven-datanucleus-plugin</artifactId>
        <version>${mavenDatanucleusPluginVersion}</version>
        <configuration>
          <api>JDO</api>
          <mappingIncludes>**/data/*.class</mappingIncludes>
          <fork>false</fork>
          <log4jConfiguration>log4j.properties</log4jConfiguration>
        </configuration>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <goals>
              <goal>enhance</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${MavenExecPluginVersion}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <classpathScope>compile</classpathScope>
              <mainClass>com.vaadin.sass.SassCompiler</mainClass>
              <arguments>
                <argument>src/main/resources/VAADIN/themes/jenkemtheme/styles.scss</argument>
                <argument>src/main/resources/VAADIN/themes/jenkemtheme/styles.css</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.vaadin</groupId>
        <artifactId>vaadin-maven-plugin</artifactId>
        <version>${vaadinVersion}</version>
        <configuration>
          <webappDirectory>${basedir}/src/main/resources/VAADIN/widgetsets</webappDirectory>
          <compileReport>true</compileReport>
          <detail>true</detail>
          <persistentunitcache>false</persistentunitcache>
          <noServer>true</noServer>
          <modules>
            <module>jenkem.JenkemWidgetset</module>
          </modules>
        </configuration>
        <executions>
          <execution>
            <phase>vaadin:update-widgetset</phase>
            <goals>
              <!-- This will throw an error that can be ignored -->
              <goal>update-widgetset</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${mavenAntRunPluginVersion}</version>
        <executions>
          <execution>
            <id>create ROOT.war</id>
            <phase>install</phase>
            <configuration>
              <target>
                <!-- copy war to deployments and rename it to ROOT.war -->
                <copy preservelastmodified="true"
                  todir="${basedir}/deployments/openshift" verbose="true">
                  <fileset dir="${basedir}/target"
                    includes="${project.artifactId}-${project.version}.${project.packaging}" />
                  <globmapper from="*.${project.packaging}"
                    to="ROOT.${project.packaging}" />
                </copy>
                <!-- copy executable standalone to deployments -->
                <copy preservelastmodified="true"
                  todir="${basedir}/deployments/standalone/jenkem"
                  verbose="true">
                  <fileset dir="${basedir}/target"
                    includes="${project.artifactId}-${project.version}-war-exec.jar" />
                </copy>
                <!-- remove extract folder and log -->
                <delete failonerror="false"
                  dir="${basedir}/deployments/standalone/jenkem/.extract" />
                <delete failonerror="false">
                  <fileset dir="${basedir}/deployments/standalone/jenkem/">
                    <exclude name=".gitignore" />
                    <exclude name="README.txt" />
                    <exclude name="${project.artifactId}-${project.version}-war-exec.jar" />
                    <exclude name="runjenkem.sh" />
                    <exclude name="runjenkem.bat" />
                  </fileset>
                </delete>
                <!-- may prevent warning in eclipse -->
                <mkdir dir="${basedir}/target/WEB-INF" />
                <copy todir="${basedir}/target/WEB-INF/" verbose="true">
                  <fileset
                    dir="${basedir}/target/${project.artifactId}-${project.version}/WEB-INF"
                    includes="web.xml" />
                </copy>
                <!-- remove duplicated WEB-INF if it exists -->
                <delete failonerror="false">
                  <fileset
                    dir="${basedir}/src/main/resources/VAADIN/widgetsets/WEB-INF" />
                </delete>
                <delete failonerror="false">
                  <fileset dir="${basedir}/src/main/resources/META-INF" />
                </delete>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>${mavenWarPluginVersion}</version>
        <configuration>
          <!-- FIXME scopes: Most of those jars shouldn't even be there in 
            the first place -->
          <packagingExcludes>WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**,
            WEB-INF/lib/maven-*.jar,
            WEB-INF/lib/junit-*.jar,
            WEB-INF/lib/wagon-*.jar,
            WEB-INF/lib/backport-*.jar,
            WEB-INF/lib/classworlds-*.jar,
            WEB-INF/lib/doxia-*.jar,
            WEB-INF/lib/jackrabbit-*.jar,
            WEB-INF/lib/jackson-*.jar,
            WEB-INF/lib/nekohtml-*.jar,
            WEB-INF/lib/plexus-*.jar,
            WEB-INF/lib/snakeyaml-*.jar,
            WEB-INF/lib/xerces*.jar,
            WEB-INF/lib/jsch-*.jar,
            WEB-INF/lib/jcl-*.jar,
            WEB-INF/lib/jta-*.jar</packagingExcludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>${tomcat7MavenPluginVersion}</version>
        <executions>
          <execution>
            <id>tomcat-run</id>
            <goals>
              <goal>exec-war-only</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <path>/</path>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>truezip-maven-plugin</artifactId>
        <version>${mavenTruezipPluginVersion}</version>
        <executions>
          <execution>
            <id>zip-standalone</id>
            <goals>
              <goal>cp</goal>
              <goal>remove</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <from>${basedir}/deployments/standalone/jenkem</from>
              <to>${basedir}/deployments/standalone/${project.artifactId}-${project.version}.zip</to>
              <fileset>
                <directory>${basedir}/deployments/standalone/${project.artifactId}-${project.version}.zip</directory>
                <includes>
                  <include>**/.extract</include>
                  <include>**/.gitignore</include>
                  <include>**/log.txt</include>
                </includes>
              </fileset>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jboss.as.plugins</groupId>
        <artifactId>jboss-as-maven-plugin</artifactId>
        <version>${jbossAsMavenPluginVersion}</version>
        <executions>
          <execution>
            <phase>jboss-as:deploy</phase>
            <configuration>
              <hostname>localhost</hostname>
              <port>9999</port>
              <filename>${project.artifactId}-${project.version}.${project.packaging}</filename>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
